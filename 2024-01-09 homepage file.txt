2024-01-09

HTTP 요청방식



GET
	+ 클라이언트가 서버로 데이터를 요청하기 위해서 사용하는 요청방식이다.
	+ 데이터 흐름 : 클라이언트 <---------- 서버
	+ GET방식 요청의 예시
		- 웹브라우저의 주소창에 주소를 직접 입력하고 요청하는 경우
		- 링크를 클릭해서 다른 주소를 요청하는 경우
		- <form method="get"> 으로 설정되어 있고, submit 버튼 클릭해서 값을 제출하는 경우
		   (폼의 입력양식의 값들이 검색조건으로 사용되는 경우다.)
	+ 요청파라미터 값의 전송
		- URL에 퀴리 스트림을 붙여서 서버에 전송
		- 요청메세지의 헤더부에 데이터를 포함해서 서버로 전송
		- URL에 정보가 그대로 노출되기 때문에 상대적으로 보안에 취약하다.
	+ 서버로 전송하는 데이터의 크기에 제한이 있음


POST	(입력을 해줘야 POST방식으로 되고 입력을 안하거나 나머지는 모두 GET방식이다)
	+ 클라이언트가 서버로 데이터를 전송해서 리소스를 추가하거나 생성하기 위해서 사용하는 요청방식이다.
	+ 데이터 흐름 : 클라이언트----------> 서버
	+ POST방식 요청의 예시
		- <form method="post"> 로 설정되어 있고, submit버튼 클릭해서 값을 제출하는 경우
		  (폼의 입력양식의 값들이 리소스를 추가하거나 생성하기 위해서 사용되는 경우다.)
	+ 요청파라미터값의 전송
		- 요청메세지의 바디부에 데이터가 포함되어 전달되기 때문에 상대적으로 보안이 우수하다.
		- 서버로 전송하는 데이터의 크기에 제한이 없다.
		- enctype에 따라서 서버로 보내는 데이터의 형식이 달라진다.
		- <form method="post" enctype="application/x-www.form-urlencoded">
			+ enctype을 설장하지 않으면  기본값이 enctype="application/x-www.form-urlencoded"이다.
			+ 요청메세지의 바디부에 포함되어 서버로 전달되는 값이 
				name=value&name=value&name=value 형식이다.
			+ 첨부파일을 업로드하지 않은 경우 사용한다.

		- <form method="post" enctype="multipart/form-data">
			+ 첨부파일을 업로드 하는 경우 사용하는 데이터 전달형식이다.
			+ 요청메세지의 바디부에 포함되어 서버로 전달되는 값이  아래와 같은 형식이다.

           			 ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
            			Content-Disposition: form-data; name="title"

            			aaa
            			------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
			            Content-Disposition: form-data; name="description"

            			bbb
			            ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
			            Content-Disposition: form-data; name="upfiles"; filename="sql-map-2.dtd"
			            Content-Type: application/octet-stream


			            ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ

	+ 서버로 전달된 요청파라미터값, 첨부파일을 처리하기위해서는 멀티파트요청을 처리하는 API혹은 외부 라이브러리를 사용해야한다.


MIME(Multipurpose Internet Mail Extensions) Type
	문서, 파일, 바이트 집합의 셩격과 형식을 나타내는 정보다.

MIME 타입의 구조
	type/subtype
	*MIM타입의 슬래시(/)로 구분된 'type'과 'sbutype'으로 구성된다,
	+type은 text, imager, video와 같은 데이터 타입이 속하는 일반적인 카테고르를 나타낸다.
	+subtype은 MIME타입이 나타내는 지정된 타입의 정확한 데이터 종류를 식별한다.
		text/plain, text/hrml, text/css
		image/jpg, image/png , image/gif

type의 종류
	+ application 
		- 모든종류이 마이너리 데이터를 
		- 데이터를 어떤 방식으로든 실행하거나 해석되기 위해서는 틀정 애플리케이션에 사용해야하는 바이너리 데이터다.
		- 예시
			application/octet-stream
			application/ pdf
			applicateion/zip
	+ text
		- 사람이 읽을수 있는 텍스트 컨텐츠. 소스코드 또는 쉼표로 구분된 CSV형태의 데이터와 같은 텍스트 형식의 데이터다
		-예시
		   text/plain
		   text/csv
		   text/html
	+ image
		-비트맵과 벡터 이미지를 모두 포함하는 이미지와 또는 그래픽 애니 메이션 데이터다
		-예시
		image/jpeg
		image/png
		image/svg*xml
	+ audio


주요 MIME타입
	application /octet-stream
		+ 바이너리 파일을 위한 기본값이다. '알려지지 않은' 바이너리 파일을 의미한다.
		+ 파일의 타입이 알려지지 않은 첨부파일을 다운로드 할떄 응답컨텐츠의 타입으로 설정할 수 있다.

	application/x-www-form-urlencoded
		+브라우저에서 서버로 폼입력값을 전송할 떄 요청 메세지의 바디부에 포함된 데이터의 형식을 지정할 때 사용한다.
		+폼입력값이 아래와 같은 형식으로 포함되어 있음을 나타낸다.
			 name=value&name=value와

	multipart/form-data
		+브라우저에서 서버로 폼입력값을 전송 할떄 요청메세지의 바디부에 포함된 데이터의 형식을 지정할때 사용한다.
		+ 폼입력값이 아래와 같은 형식으로 포함되어 있음을 나타낸다.


           			 ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
            			Content-Disposition: form-data; name="title"

            			aaa
            			------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
			            Content-Disposition: form-data; name="description"

            			bbb
			            ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
			            Content-Disposition: form-data; name="upfiles"; filename="sql-map-2.dtd"
			            Content-Type: application/octet-stream

		   

	text/plain
		+ 텍스트 파일에 대한 기본값이다.
	text/css
		+ 웹페이지의 스타일을 지정하는 CSS파일은	text/css타입으로 지정되어야 한다.
	tet/html
		+ 모든 HTML 컨텐츠 타입을 나타낸다.
	text/javascript
		+ 자바스크립트를 나타낸다.
	text/xml
		+ 모든 XML컨텐츠 타입을 나타낸다.
		+ XML은 다른 시스템간의 데이터 교환용 데이터 교환용 문서를 만들때 사용되는 데이터 표현형식이다.
	appication/json
		+ JSON 컨텐츠 타입을 나타낸다.
		+ JSON은 서로다른 시스템간의 데이터 교환용 문서를 만들때 사용되는 데이터 표현형식이다.
		+ JSON은 XML에 비해 경량의 데이터 교환형식이다.(내용자체가 짧고 처리하는 형식이 쉽다.)







서블릿의 멀티파트 요청 처리 API
HttpServletRequset
	+요청 메세지 정보를 표현하는 객체다
	+ 주요 메소드
		Part				getPart(String name)
				+지정된 입력필드 이름에 해당하는 입력필드 정보를 표현하는 객체를 반환한다.
				+첨부파일 업로드 필드의 필드명이 서로 다를때 이메소드를 이용해서 첨부파일 정보를 표현하는
				 Part객체를 하나씩 획득할수 있다.
		Collection<Part>	 	getParts();
				+모든 입력필드에 대해서 Part객체를 하나씩 생성하고 Collection객체에 담아서 반환한다.
				+ 첨부파일 업로드 필드의 필드명이 모두 동일 할때 이 메소드를 이용해서 모든 입력필드를 표현하는
				 Part객체를 전부 조회한 다음, 실제 첨부파일 업로드 필드를 표현하는 Part객체만 선별해서 처리한다.

Part
	+ 서버로 전달된 입력필드 정보를 표현하는 객체다.
	+ 주로, 서버로 업로드된 첨부파일을 다루는 메소드를 제공한다.
	+ 입력폼의 모든 입력 필드에 대해서 Part객체가 생성된다.
	+ 주요메소드
		String    		getName()
			+첨부파일 입력필드의 name값을 반환한다.

		Stirng    		getSubmittedFileName()
			+업로드된 첨부파일의 파일명을 반환한다.

		String    		getContentType()
			+ 업로드된 첨부파일의 컨텐츠 파일을 MIME타입형식의문자열로 반환한다.

		long	    		getSize()
			+ 업로드된 첨부파일의 크기를 byte단위의 정수값으로 반환한다.

		ImputStream 	getInputStream()
			+ 업로드된 첨부파일을 읽어오는  읽기전용 스트림을 반환한다
 










vo -> xml -> fileboardDao





------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------파일 업로드
	1. 파일 업로드 입력폼을 작성하기
		<form method="post" action="upload" enctype="multipart/form-data">

		</form>

		+ 요청방식을 post로 설정한다.
		+ 요청메세지의 바디부에 포함되는 컨텐츠의 인코딩 방식을 multipart/form-data로 설정한다.

	2. 파일 업로드 필드 작성하기
		<input type="file" name="file1" />
		<input type="file" name="file2" />
		
		혹은
		<input type="file" name="files" />
		<input type="file" name="files" />

		+ 업로드하는 파일을 구분해서 업로드해야하는 경우에는 첨부파일 입력필드의 이름을 각각 다르게 설정한다.
			예시) 
				도서정보 등록할 때
					상세화면에 표시할 큰 도서이미지, 
					리스트화면에 표시할 작은 이미지,
					상세화면에서 표시할 도서상세 이미지
			예시)
				경력사항 등록할 때
					신분증 파일,
					이력서 파일,
					경력증명서 파일,
					자격증 파일

		+ 업로드하는 파일의 성질이 동일한 것들을 여러개 첨부하는 경우는 입력필드의 이름을 같은 이름으로 설정한다.
			예시)
				SNS에 표시할 이미지를 등록할 떄
				경력사항에 해당하는 경력증명서 파일을 여러개 등록 할떄
				자격사항에 해당하는 자격증 파일을 여러개 등록할때

	3. 업로드된 첨부파일정보를 테이블에 저장하기
		+ 프로젝트에서 제공하는 파일 업로드 API를 사용해서 
			파일명, 파일사이즈, 파일컨텐츠 타입, 파일 데이터, 읽기전용스트림을 획득할  있다.
		+ 파일정보 저장에 필요한 정보를 획득해서 테이블에 저장시킨다.
		
	4. 업로드된 첨부파일을 특정폴더에 저장하기
		+ 프로젝트에서 제공하는 파일 업로드 API를 사용해서 
			파일명, 파일사이즈, 파일컨텐츠 타입, 파일 데이터, 읽기전용스트림을 획득할  있다.
		+ IOUtils, FileCopyUtils(제공) 등을 이용해서 업로드된 첨부파일을 저장시킨다.

파일 다운로드

	1. 다운로드할 파일정보를 조회할 수 있는 기본키값을 요청파라미터로 전달하기
	  + 다운로드할 파일명을 요청파라미터로 전달하지 않는다.
	2.첨부파일 다운로드하기
	










            